type OptionsFactory @entity {
  id: ID!

  optionsExchangeAddress: Bytes!

  owner: Bytes!

  actions: [FactoryAction!] @derivedFrom(field: "factory")
}

#
# Factory Action
#
interface FactoryAction {
  " Equals to: <actionType>-<transactionHash>-<logIndex> "
  id: ID!

  factory: OptionsFactory

  " Block number "
  block: BigInt!

  " Transaction hash (tx) "
  transactionHash: Bytes!

  " Timestamp as seconds (time) "
  timestamp: BigInt!
}

type OptionsContractCreated implements FactoryAction @entity {
  " Equals to: <OPTIONS-CREATED>-<transactionHash>-<logIndex> "
  id: ID!

  factory: OptionsFactory

  " OptionsContract address "
  address: Bytes!

  " Block number "
  block: BigInt!

  " Transaction hash (tx) "
  transactionHash: Bytes!

  " Action timestamp as seconds (time) "
  timestamp: BigInt!
}

type AssetAdded implements FactoryAction @entity {
  " Equals to: <ASSET-ADDED>-<transactionHash>-<logIndex> "
  id: ID!

  factory: OptionsFactory

  " Asset name "
  asset: String!

  " Asset address "
  address: Bytes!

  " Block number "
  block: BigInt!

  " Transaction hash (tx) "
  transactionHash: Bytes!

  " Action timestamp as seconds (time) "
  timestamp: BigInt!
}

type AssetChanged implements FactoryAction @entity {
  " Equals to: <ASSET-CHANGED>-<transactionHash>-<logIndex> "
  id: ID!

  factory: OptionsFactory

  " Asset name "
  asset: String!

  " Previous Asset address "
  oldAddress: Bytes!

  " New Asset address "
  newAddress: Bytes!

  " Block number "
  block: BigInt!

  " Transaction hash (tx) "
  transactionHash: Bytes!

  " Action timestamp as seconds (time) "
  timestamp: BigInt!
}

type AssetDeleted implements FactoryAction @entity {
  " Equals to: <ASSET-DELETED>-<transactionHash>-<logIndex> "
  id: ID!

  factory: OptionsFactory

  " Asset name "
  asset: String!

  " Asset address "
  address: Bytes!

  " Block number "
  block: BigInt!

  " Transaction hash (tx) "
  transactionHash: Bytes!

  " Action timestamp as seconds (time) "
  timestamp: BigInt!
}

type FactoryOwnershipTransferred implements FactoryAction @entity {
  " Equals to: <OWNERSHIP-TRANFERRED>-<transactionHash>-<logIndex> "
  id: ID!

  factory: OptionsFactory

  " Previous owner address "
  oldOwner: Bytes!

  " New owner number "
  newOwner: Bytes!

  " Block number "
  block: BigInt!

  " Transaction hash (tx) "
  transactionHash: Bytes!

  " Action timestamp as seconds (time) "
  timestamp: BigInt!
}

type SupportedAsset @entity {
  " Equals to: Asset Name "
  id: ID!

  " Asset name"
  asset: String!

  " Asset Address "
  address: Bytes!
}

type OptionsContract @entity {
  " Equals to: Contract address "
  id: ID!

  " OptionsContract address"
  address: Bytes!

  " Contract owner address"
  owner: Bytes!

  " The minimum ratio of a repo's collateral to insurance promised - Value "
  collateralizationRatioValue: BigInt!

  " The minimum ratio of a repo's collateral to insurance promised - Exponent "
  collateralizationRatioExp: BigInt!

  " The amount of underlying that 1 oToken protects - Value "
  oTokenExchangeRateValue: BigInt!

  " The amount of underlying that 1 oToken protects - Exponent "
  oTokenExchangeRateExp: BigInt!

  " The amount of insurance promised per oToken - Value "
  strikePriceValue: BigInt!

  " The amount of insurance promised per oToken - Exponent "
  strikePriceExp: BigInt!

  " The time of expiry of the options contract "
  expiry: BigInt!

  " The collateral asset "
  collateral: Bytes!

  " The asset that is being protected "
  underlying: Bytes!

  " The asset in which the insurance is calculated "
  strike: Bytes!

  " The total collateral withdrawn from the Options Contract every time the exercise function is called "
  totalExercised: BigInt!


  # repos - TODO
  # actions - TODO

  " Block number when the contract was created "
  block: BigInt!

  " Transaction hash (tx)  where the contract was created "
  transactionHash: Bytes!

  " Timestamp as seconds (time)  when the contract was created "
  timestamp: BigInt!
}
